spring.application.name=plans-management-system
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=plan-storage-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.template.default-topic=mensajes-topic
# Schema Registry URL
spring.kafka.properties.schema.registry.url=http://localhost:8081
# Producer config
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
# Consumer config
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
# Use generated Avro classes
spring.kafka.properties.specific.avro.reader=true
fever.event.provider.api=https://provider.code-challenge.feverup.com
fever.event.provider.fetch-interval-ms=60000
spring.datasource.url=jdbc:postgresql://localhost:5432/events
spring.datasource.username=postgres
spring.datasource.password=admin
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.kafka.listener.ack-mode=manual
